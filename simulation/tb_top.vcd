$date
	Sat Nov 19 12:26:33 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_top $end
$var wire 8 ! A [7:0] $end
$var wire 8 " B [7:0] $end
$var wire 8 # C [7:0] $end
$var wire 8 $ D [7:0] $end
$var wire 1 % zero_flag $end
$var wire 8 & out [7:0] $end
$var wire 1 ' carry_flag $end
$var wire 4 ( bus_low [3:0] $end
$var wire 4 ) bus_high [3:0] $end
$var reg 1 * clk $end
$var reg 1 + clr $end
$scope module uut $end
$var wire 8 , A [7:0] $end
$var wire 8 - B [7:0] $end
$var wire 8 . C [7:0] $end
$var wire 8 / D [7:0] $end
$var wire 1 0 buf_clk $end
$var wire 8 1 bus [7:0] $end
$var wire 1 ' carry_flag $end
$var wire 1 * clk $end
$var wire 1 + clr $end
$var wire 1 2 ld_acc $end
$var wire 1 3 ld_b_reg $end
$var wire 1 4 ld_ir $end
$var wire 1 5 ld_mar $end
$var wire 1 6 ld_out_reg $end
$var wire 1 7 low_acc_out_en $end
$var wire 1 % zero_flag $end
$var wire 1 8 subadd_out_en $end
$var wire 1 9 sub_add $end
$var wire 1 : rd_rs $end
$var wire 1 ; pc_out_en $end
$var wire 8 < out [7:0] $end
$var wire 4 = op_code [3:0] $end
$var wire 4 > mar_out [3:0] $end
$var wire 1 ? low_mem_out_en $end
$var wire 1 @ low_ld_out_reg $end
$var wire 1 A low_ld_mar $end
$var wire 1 B low_ld_ir $end
$var wire 1 C low_ld_b_reg $end
$var wire 1 D low_ld_acc $end
$var wire 1 E low_ir_out_en $end
$var wire 1 F low_halt $end
$var wire 8 G ir_out [7:0] $end
$var wire 1 H inc $end
$var wire 4 I bus_low [3:0] $end
$var wire 4 J bus_high [3:0] $end
$var wire 8 K b_reg_out [7:0] $end
$var wire 1 L acc_out_en $end
$var wire 8 M acc_out [7:0] $end
$scope module acc $end
$var wire 1 0 clk $end
$var wire 1 + clr $end
$var wire 8 N d [7:0] $end
$var wire 1 2 i_en $end
$var wire 8 O qbar [7:0] $end
$var reg 8 P q [7:0] $end
$upscope $end
$scope module asub $end
$var wire 8 Q A [7:0] $end
$var wire 8 R C [7:0] $end
$var wire 8 S D [7:0] $end
$var wire 1 T add_sub_low_out_en $end
$var wire 1 U cout $end
$var wire 4 V op_new [3:0] $end
$var wire 8 W out [7:0] $end
$var wire 1 9 sub $end
$var wire 1 8 out_en $end
$var wire 8 X add_sub_out [7:0] $end
$var wire 8 Y B [7:0] $end
$scope module r1 $end
$var wire 8 Z a [7:0] $end
$var wire 1 [ cin $end
$var wire 1 U cout $end
$var wire 4 \ operation [3:0] $end
$var wire 8 ] sum [7:0] $end
$var wire 1 9 sub $end
$var wire 8 ^ b [7:0] $end
$var reg 8 _ temp [7:0] $end
$upscope $end
$scope module tri8 $end
$var wire 8 ` in [7:0] $end
$var wire 1 T low_enable $end
$var wire 8 a out [7:0] $end
$scope module b0 $end
$var wire 4 b in [3:0] $end
$var wire 1 T low_enable $end
$var wire 4 c out [3:0] $end
$upscope $end
$scope module b1 $end
$var wire 4 d in [3:0] $end
$var wire 1 T low_enable $end
$var wire 4 e out [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module b_reg $end
$var wire 1 0 clk $end
$var wire 1 + clr $end
$var wire 8 f d [7:0] $end
$var wire 1 3 i_en $end
$var wire 8 g qbar [7:0] $end
$var reg 8 h q [7:0] $end
$upscope $end
$scope module buf0 $end
$var wire 4 i in [3:0] $end
$var wire 4 j out [3:0] $end
$var wire 1 E low_enable $end
$upscope $end
$scope module buf1 $end
$var wire 8 k in [7:0] $end
$var wire 1 7 low_enable $end
$var wire 8 l out [7:0] $end
$scope module b0 $end
$var wire 4 m in [3:0] $end
$var wire 1 7 low_enable $end
$var wire 4 n out [3:0] $end
$upscope $end
$scope module b1 $end
$var wire 4 o in [3:0] $end
$var wire 1 7 low_enable $end
$var wire 4 p out [3:0] $end
$upscope $end
$upscope $end
$scope module ir $end
$var wire 1 0 clk $end
$var wire 1 + clr $end
$var wire 8 q d [7:0] $end
$var wire 1 4 i_en $end
$var wire 8 r qbar [7:0] $end
$var reg 8 s q [7:0] $end
$upscope $end
$scope module mar $end
$var wire 1 0 clk $end
$var wire 1 + clr $end
$var wire 4 t d [3:0] $end
$var wire 1 5 i_en $end
$var wire 4 u qbar [3:0] $end
$var reg 4 v q [3:0] $end
$upscope $end
$scope module mem $end
$var wire 8 w acc_out [7:0] $end
$var wire 4 x addr [3:0] $end
$var wire 4 y op_code [3:0] $end
$var wire 1 ? low_o_en $end
$var reg 8 z data_out [7:0] $end
$var reg 8 { temp [7:0] $end
$upscope $end
$scope module out_reg $end
$var wire 1 0 clk $end
$var wire 1 + clr $end
$var wire 8 | d [7:0] $end
$var wire 1 6 i_en $end
$var wire 8 } qbar [7:0] $end
$var reg 8 ~ q [7:0] $end
$upscope $end
$scope module pc $end
$var wire 1 0 clk $end
$var wire 1 + clr $end
$var wire 1 !" not_pc_out_en $end
$var wire 1 ; pc_out_en $end
$var wire 4 "" out [3:0] $end
$var wire 1 H inc $end
$var reg 4 #" hold [3:0] $end
$scope module tbuf $end
$var wire 4 $" in [3:0] $end
$var wire 1 !" low_enable $end
$var wire 4 %" out [3:0] $end
$upscope $end
$upscope $end
$scope module seq $end
$var wire 1 L acc_out_en $end
$var wire 1 &" aluon $end
$var wire 1 0 clk $end
$var wire 1 + clr $end
$var wire 1 E low_ir_out_en $end
$var wire 1 D low_ld_acc $end
$var wire 1 C low_ld_b_reg $end
$var wire 1 B low_ld_ir $end
$var wire 1 A low_ld_mar $end
$var wire 1 @ low_ld_out_reg $end
$var wire 1 ? low_mem_out_en $end
$var wire 4 '" op_code [3:0] $end
$var wire 1 9 sub_add $end
$var wire 1 8 subadd_out_en $end
$var wire 1 (" temp $end
$var wire 1 )" xor_ratna $end
$var wire 6 *" t [5:0] $end
$var wire 1 +" sub $end
$var wire 1 ," sta_imm $end
$var wire 1 ; pc_out_en $end
$var wire 1 -" out $end
$var wire 1 ." or_ratna $end
$var wire 1 F low_halt $end
$var wire 1 /" lda_imm $end
$var wire 1 0" lda $end
$var wire 1 H inc $end
$var wire 1 1" cmp_ratna $end
$var wire 1 2" and_ratna $end
$var wire 1 3" add_new $end
$var wire 1 4" add $end
$scope module counter $end
$var wire 1 0 clk $end
$var wire 1 + res $end
$var reg 6 5" t [5:0] $end
$upscope $end
$scope module decoder $end
$var wire 1 F low_halt $end
$var wire 4 6" op_code [3:0] $end
$var wire 1 -" out $end
$var wire 1 )" xor_ratna $end
$var wire 1 +" sub $end
$var wire 1 ," sta_imm $end
$var wire 1 ." or_ratna $end
$var wire 1 /" lda_imm $end
$var wire 1 0" lda $end
$var wire 1 1" cmp_ratna $end
$var wire 1 2" and_ratna $end
$var wire 1 3" add_new $end
$var wire 1 4" add $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 6"
b100000 5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
b100000 *"
x)"
1("
bx '"
x&"
bx %"
bx $"
bx #"
bx ""
0!"
bx ~
bx }
bzxxxx |
bx {
bz z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bzxxxx q
bz p
bx o
bz n
bx m
bzxxxx l
bx k
bz j
bx i
bx h
bx g
bzxxxx f
bz e
bx d
bz c
bx b
bzxxxx a
bx `
bx _
bx ^
bx ]
bx \
0[
bx Z
bx Y
bx X
bzxxxx W
bx V
zU
1T
bz S
bz R
bx Q
bx P
bx O
bzxxxx N
bx M
0L
bx K
bz J
bx I
0H
bx G
xF
1E
1D
1C
1B
0A
1@
1?
bx >
bx =
bx <
1;
x:
09
08
17
06
15
04
03
02
bzxxxx 1
x0
bz /
bz .
bz -
bz ,
x+
x*
bz )
bx (
z'
bx &
z%
bz $
bz #
bz "
bz !
$end
#2
0&"
x0
1F
0-"
b0 (
b0 I
b0 t
0:
bz0000 1
bz0000 N
bz0000 W
bz0000 a
bz0000 f
bz0000 l
bz0000 q
bz0000 |
b0 ""
b0 %"
b1111 u
b11111111 r
10"
04"
0+"
0)"
02"
0."
01"
03"
0/"
0,"
b0 =
b0 V
b0 \
b0 y
b0 '"
b0 6"
b0 i
b0 m
b0 o
b11111111 O
b11111111 g
b11111111 }
b0 #"
b0 $"
b0 >
b0 v
b0 x
b0 G
b0 s
b0 M
b0 P
b0 Q
b0 Z
b0 k
b0 w
b0 K
b0 Y
b0 ^
b0 h
b0 &
b0 <
b0 ~
1+
#8
0+
#10
10
1*
#15
05
1A
bz (
bz I
bz t
bz 1
bz N
bz W
bz a
bz f
bz l
bz q
bz |
bz ""
bz %"
1!"
0;
1H
b10000 *"
b10000 5"
00
0*
#20
b1 #"
b1 $"
10
1*
#25
b0 )
b0 J
b1000 (
b1000 I
b1000 t
b1000 1
b1000 N
b1000 W
b1000 a
b1000 f
b1000 l
b1000 q
b1000 |
b1000 z
14
0?
0B
0H
b1000 *"
b1000 5"
00
0*
#30
b11110111 r
b1000 i
b1000 G
b1000 s
10
1*
#35
bz )
bz J
15
bz1000 1
bz1000 N
bz1000 W
bz1000 a
bz1000 f
bz1000 l
bz1000 q
bz1000 |
bz z
0A
b1000 j
0E
04
1?
1B
b100 *"
b100 5"
00
0*
#40
b111 u
b1000 >
b1000 v
b1000 x
10
1*
#45
b110 )
b110 J
12
b1101001 z
b1000 {
05
0D
b1001 (
b1001 I
b1001 t
0?
1A
b1101001 1
b1101001 N
b1101001 W
b1101001 a
b1101001 f
b1101001 l
b1101001 q
b1101001 |
bz j
1E
b10 *"
b10 5"
00
0*
#50
b1001 m
b110 o
b10010110 O
b1101001 M
b1101001 P
b1101001 Q
b1101001 Z
b1101001 k
b1101001 w
10
1*
#55
bz )
bz J
bz (
bz I
bz t
02
bz 1
bz N
bz W
bz a
bz f
bz l
bz q
bz |
bz z
1D
1?
b1 *"
b1 5"
00
0*
#60
10
1*
#65
15
0A
b1 (
b1 I
b1 t
bz0001 1
bz0001 N
bz0001 W
bz0001 a
bz0001 f
bz0001 l
bz0001 q
bz0001 |
b1 ""
b1 %"
0!"
1;
b100000 *"
b100000 5"
00
0*
#70
b1110 u
b1 >
b1 v
b1 x
10
1*
#75
05
1A
bz (
bz I
bz t
bz 1
bz N
bz W
bz a
bz f
bz l
bz q
bz |
bz ""
bz %"
1!"
0;
1H
b10000 *"
b10000 5"
00
0*
#80
b10 #"
b10 $"
10
1*
#85
b1100 )
b1100 J
b1001 (
b1001 I
b1001 t
b11001001 1
b11001001 N
b11001001 W
b11001001 a
b11001001 f
b11001001 l
b11001001 q
b11001001 |
b11001001 z
14
0?
0B
0H
b1000 *"
b1000 5"
00
0*
#90
b1001 b
b110 d
1:
b1101001 X
b1101001 ]
b1101001 _
b1101001 `
1&"
b110110 r
00"
13"
b1100 =
b1100 V
b1100 \
b1100 y
b1100 '"
b1100 6"
b1001 i
b11001001 G
b11001001 s
10
1*
#95
bz )
bz J
15
bz1001 1
bz1001 N
bz1001 W
bz1001 a
bz1001 f
bz1001 l
bz1001 q
bz1001 |
bz z
0A
b1001 j
0E
04
1?
1B
b100 *"
b100 5"
00
0*
#100
b110 u
b1001 >
b1001 v
b1001 x
10
1*
#105
b111 )
b111 J
b1111001 z
b1001 {
05
13
b1001 (
b1001 I
b1001 t
0?
1A
0("
0C
b1111001 1
b1111001 N
b1111001 W
b1111001 a
b1111001 f
b1111001 l
b1111001 q
b1111001 |
bz j
1E
b10 *"
b10 5"
00
0*
#110
b10 b
b1110 d
b10000110 g
b11100010 X
b11100010 ]
b11100010 _
b11100010 `
b1111001 K
b1111001 Y
b1111001 ^
b1111001 h
10
1*
#115
12
bz z
03
b10 (
b10 I
b10 t
b1110 )
b1110 J
0D
1?
1("
1C
b10 c
b11100010 1
b11100010 N
b11100010 W
b11100010 a
b11100010 f
b11100010 l
b11100010 q
b11100010 |
b1110 e
0T
18
b1 *"
b1 5"
00
0*
#120
b1011 (
b1011 I
b1011 t
b101 )
b101 J
b1011 c
b1011011 1
b1011011 N
b1011011 W
b1011011 a
b1011011 f
b1011011 l
b1011011 q
b1011011 |
b101 e
b1011 b
b101 d
b1011011 X
b1011011 ]
b1011011 _
b1011011 `
b10 m
b1110 o
b11101 O
b11100010 M
b11100010 P
b11100010 Q
b11100010 Z
b11100010 k
b11100010 w
10
1*
#125
02
bz )
bz J
1D
15
bz c
bz e
1T
0A
b10 (
b10 I
b10 t
08
bz0010 1
bz0010 N
bz0010 W
bz0010 a
bz0010 f
bz0010 l
bz0010 q
bz0010 |
b10 ""
b10 %"
0!"
1;
b100000 *"
b100000 5"
00
0*
#130
b1101 u
b10 >
b10 v
b10 x
10
1*
#135
05
1A
bz (
bz I
bz t
bz 1
bz N
bz W
bz a
bz f
bz l
bz q
bz |
bz ""
bz %"
1!"
0;
1H
b10000 *"
b10000 5"
00
0*
#140
b11 #"
b11 $"
10
1*
#145
b1110 )
b1110 J
b1110 (
b1110 I
b1110 t
b11101110 1
b11101110 N
b11101110 W
b11101110 a
b11101110 f
b11101110 l
b11101110 q
b11101110 |
b11101110 z
14
0?
0B
0H
b1000 *"
b1000 5"
00
0*
#150
1-"
b0 b
b110 d
0:
b1100000 X
b1100000 ]
b1100000 _
b1100000 `
0&"
b10001 r
03"
b1110 =
b1110 V
b1110 \
b1110 y
b1110 '"
b1110 6"
b1110 i
b11101110 G
b11101110 s
10
1*
#155
16
b10 (
b10 I
b10 t
bz z
0@
b11100010 1
b11100010 N
b11100010 W
b11100010 a
b11100010 f
b11100010 l
b11100010 q
b11100010 |
b10 n
b1110 p
07
04
1?
1L
1B
b100 *"
b100 5"
00
0*
#160
b11101 }
b11100010 &
b11100010 <
b11100010 ~
10
1*
#165
06
bz (
bz I
bz t
bz )
bz J
1@
bz n
bz 1
bz N
bz W
bz a
bz f
bz l
bz q
bz |
bz p
17
0L
b10 *"
b10 5"
00
0*
#170
10
1*
#175
b1 *"
b1 5"
00
0*
#180
10
1*
#185
15
0A
b11 (
b11 I
b11 t
bz0011 1
bz0011 N
bz0011 W
bz0011 a
bz0011 f
bz0011 l
bz0011 q
bz0011 |
b11 ""
b11 %"
0!"
1;
b100000 *"
b100000 5"
00
0*
#190
b1100 u
b11 >
b11 v
b11 x
10
1*
#195
05
1A
bz (
bz I
bz t
bz 1
bz N
bz W
bz a
bz f
bz l
bz q
bz |
bz ""
bz %"
1!"
0;
1H
b10000 *"
b10000 5"
00
0*
#200
b100 #"
b100 $"
10
1*
#205
b1111 )
b1111 J
b1111 (
b1111 I
b1111 t
b11111111 1
b11111111 N
b11111111 W
b11111111 a
b11111111 f
b11111111 l
b11111111 q
b11111111 |
b11111111 z
14
0?
0B
0H
b1000 *"
b1000 5"
00
0*
#210
0-"
0F
1:
b0 r
b1111 =
b1111 V
b1111 \
b1111 y
b1111 '"
b1111 6"
b1111 i
b11111111 G
b11111111 s
z0
1*
#215
z0
0*
#220
z0
1*
#225
z0
0*
#230
z0
1*
#235
z0
0*
#240
z0
1*
#245
z0
0*
#250
z0
1*
#255
z0
0*
#260
z0
1*
#265
z0
0*
#270
z0
1*
#275
z0
0*
#280
z0
1*
#285
z0
0*
#290
z0
1*
#295
z0
0*
#300
z0
1*
#305
z0
0*
#310
z0
1*
#315
z0
0*
#320
z0
1*
#325
z0
0*
#330
z0
1*
#335
z0
0*
#340
z0
1*
#345
z0
0*
#350
z0
1*
#355
z0
0*
#360
z0
1*
#365
z0
0*
#370
z0
1*
#375
z0
0*
#380
z0
1*
#385
z0
0*
#390
z0
1*
#395
z0
0*
#400
z0
1*
#405
z0
0*
#410
z0
1*
#415
z0
0*
#420
z0
1*
#425
z0
0*
#430
z0
1*
#435
z0
0*
#440
z0
1*
#445
z0
0*
#450
z0
1*
#455
z0
0*
#460
z0
1*
#465
z0
0*
#470
z0
1*
#475
z0
0*
#480
z0
1*
#485
z0
0*
#490
z0
1*
#495
z0
0*
#500
z0
1*
#505
z0
0*
#508
